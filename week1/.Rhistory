19/20
pbinom(18, 20, 0.5, lower.tail = F) + pbinom(19, 20, 0.5, lower.tail = F) # alpha = 0.95
18/20
pbinom(19, 20, 0.5, lower.tail = F) # alpha = 1
pbinom(18, 20, 0.5, lower.tail = F)  # alpha = 0.95
9.536743e-07
isidata <- read.table("neuronspikes.txt", col.names = "isi")
setwd("~/School/Master in statistics/Sbe/week1")
isidata <- read.table("neuronspikes.txt", col.names = "isi")
isidata = read.table("neuronspikes.txt", col.names = "isi")
isdata
isidata
hist(isidata$isi, breaks = 50, probability = T)
hist(isidata$isi, breaks = 50, probability = T, main = "isi", xlab = "isi")
par(mfrow = c(2,2))
par(mfrow = c(2,2))
hist(isidata$isi,
breaks = 50,
probability = T,
main = "Histogram of isi, breaks = 50", xlab = "isi",
col = "seagreen1")
hist(isidata$isi,
breaks = 40,
probability = T,
main = "Histogram of isi, breaks = 40", xlab = "isi",
col = "cyan1")
hist(isidata$isi,
breaks = 30,
probability = T,
main = "Histogram of isi, breaks = 30", xlab = "isi",
col = "plum1")
hist(isidata$isi,
breaks = 20,
probability = T,
main = "Histogram of isi, breaks = 20", xlab = "isi",
col = "orangered")
lambda = seq(0.5, 1.5, 0.1)
lamda
lambda
?dexp
x = isidata$isi
rm(lambda)
first_plot <- FALSE
for (rate in  seq(0.1, to = 1.5, 0.1)){
curve(dexp(x, rate = rate), add = first_plot,
from = -2, to = +2,
col= 10*sd, ylab = "f")
first_plot = TRUE
}
curve(x^2, -2, 2, col = "blue")
par(mfrow = c(1,1))
curve(x^2, -2, 2, col = "blue")
first_plot <- FALSE
for (rate in  seq(0.1, to = 1.5, 0.1)){
curve(dexp(x, rate = rate), add = first_plot,
from = 0, to = 2,
col= 10*sd, ylab = "f")
first_plot = TRUE
}
curve(dexp(x, rate = rate), add = first_plot,
from = 0, to = 2,
col= 10*sd, ylab = "f")
first_plot <- FALSE
for (rate in  seq(0.1, to = 1.5, 0.1)){
curve(dexp(x, rate = rate), add = first_plot,
from = 0, to = 2,
col= 10*rate, ylab = "f")
first_plot = TRUE
}
first_plot <- FALSE
for (rate in  seq(0.1, to = 1.5, 0.1)){
curve(dexp(x, rate = rate), add = first_plot,
from = 0, to = 10,
col= 10*rate, ylab = "f")
first_plot = TRUE
}
curve(dexp(x, rate = 0.1),
from = 0, to = 10,
col= 10*rate, ylab = "f")
curve(dexp(x, rate = 0.1),
from = 0, to = 5,
col= 10*rate, ylab = "f")
x
range(x)
first_plot <- FALSE
for (rate in  seq(0.1, to = 1.5, 0.1)){
curve(dexp(x, rate = rate), add = first_plot,
from = 0, to = 10,
col= 10*rate, ylab = "f")
first_plot = TRUE
}
curve(dexp(x, rate = 1.1),
from = 0, to = 5,
col= 10*rate, ylab = "f")
hist(isidata$isi,
breaks = 50,
probability = T,
main = "Histogram of isi", xlab = "isi")
first_plot <- FALSE
first_plot <- TRUE
for (rate in  seq(0.1, to = 1.5, 0.1)){
curve(dexp(x, rate = rate), add = first_plot,
from = 0, to = 10,
col= 10*rate)
}
hist(isidata$isi,
breaks = 50,
probability = T,
main = "Histogram of isi", xlab = "isi")
first_plot <- TRUE
for (rate in  seq(0.1, to = 1.5, 0.1)){
curve(dexp(x, rate = rate), add = first_plot,
from = 0, to = 6,
col= 10*rate)
}
range(x)
hist(isidata$isi,
breaks = 50,
probability = T,
main = "Histogram of isi", xlab = "isi")
curve(dexp(x, rate = 1.5), add = TRUE,
from = 0, to = 6,
col= "blue")
curve(dexp(x, rate = 1), add = TRUE,
from = 0, to = 6,
col= "red")
hist(isidata$isi,
breaks = 50,
probability = T,
main = "Histogram of isi", xlab = "isi")
curve(dexp(x, rate = 1.5), add = TRUE,
from = 0, to = 6,
col= "blue")
curve(dexp(x, rate = 1), add = TRUE,
from = 0, to = 6,
col= "red")
curve(dexp(x, rate = 1.2), add = TRUE,
from = 0, to = 6,
col= "forestgreen")
isidata = read.table("neuronspikes.txt", col.names = "isi")
x = isidata$isi
# 3.1
par(mfrow = c(2,2))
hist(x,
breaks = 50,
probability = T,
main = "Histogram of isi, breaks = 50", xlab = "isi",
col = "seagreen1")
hist(x,
breaks = 40,
probability = T,
main = "Histogram of isi, breaks = 40", xlab = "isi",
col = "cyan1")
hist(x,
breaks = 30,
probability = T,
main = "Histogram of isi, breaks = 30", xlab = "isi",
col = "plum1")
hist(x,
breaks = 20,
probability = T,
main = "Histogram of isi, breaks = 20", xlab = "isi",
col = "orangered")
####################
par(mfrow = c(1,1))
# 3.2
hist(isidata$isi,
breaks = 50,
probability = T,
main = "Histogram of isi", xlab = "isi")
first_plot <- TRUE
for (rate in  seq(0.1, to = 1.5, 0.1)){
curve(dexp(x, rate = rate), add = first_plot,
from = 0, to = 6,
col= 10*rate)
}
# it looks like rate = 1.5 approximates the histogram the best.
?dexp
pexp(x, rate = 1.5)
pexp(1, rate = 1.5)
pexp(1.5, rate = 1.5) - pexp(0.5, rate = 1.5) # 3.3.2
cells = read.csv("cell types.csv", na.strings = "")
cells = read.csv("cell_types.csv", na.strings = "")
?read.csv
View(cells)
View(cells)
sapply(cells, class)
summary(cells)
cells$donor__species
table(cells$donor__species)
sum(table(cells$donor__species))
table(cells$donor__species)[1]
table(cells$donor__species)[2] / sum(table(cells$donor__species)) # 4.2.2
hist(cells$ef__peak_t_ramp, probability = T, xlab = 'ef__peak_t_ramp, probability')
hist(cells$ef__peak_t_ramp, probability = T, xlab = 'ef__peak_t_ramp, probability',
main = 'ef__peak_t_ramp, probability')
x = rnorm(100)
y = rbinom(100, 1, .5)
y
df = data.frame(x = x, y = y)
df
table(cells$donor__species) # 4.2.1
subset(cells, donor__species == 'Homo Sapiens ' )
summary(subset(cells, donor__species == 'Homo Sapiens ' ))
summary(subset(cells, cells$donor__species == 'Homo Sapiens ' ))
summary(subset(cells, cells$donor__species == 'Homo Sapiens' ))
summary(subset(cells, donor__species == 'Homo Sapiens' ))
cells$donor__species == 'Homo Sapiens'
table(cells$donor__species) # 4.2.1
Mus_musculus = cells$donor__species == 'Mus musculus'
homo_sapiens = cells$donor__species == 'Homo Sapiens'
Mus_musculus = cells$donor__species == 'Mus musculus'
sum(homo_sapiens)
sum(Mus_musculus)
par(mfrow = c(1,2))
homo_sapiens = cells$donor__species == 'Homo Sapiens'
Mus_musculus = cells$donor__species == 'Mus musculus'
hist(cells$ef__peak_t_ramp[homo_sapiens], probability = T, xlab = 'ef__peak_t_ramp, probability',
main = 'Homo sapiens ef__peak_t_ramp, probability') # 4.3.1
hist(cells$ef__peak_t_ramp[Mus_musculus], probability = T, xlab = 'ef__peak_t_ramp, probability',
main = 'Mus_musculus ef__peak_t_ramp, probability') # 4.3.1
rm(x,y,df)
?dlnorm()
range(cells$donor__species)
range(cells$ef__peak_t_ramp)
cells$ef__peak_t_ramp
x = cells$ef__peak_t_ramp
x
y = na.omit(x)
y
range(y)
rm(x)
hist(cells$ef__peak_t_ramp, probability = T, xlab = 'ef__peak_t_ramp, probability',
main = 'ef__peak_t_ramp, probability') # 4.3.1
first_plot <- TRUE
for (meanlog in  seq(1, to = 3, 0.5)){
curve(dlnorm(x, sdlog = 0.6, meanlog = meanlog), add = first_plot,
from = 0.5, to = 30,
col= 10*rate)
}
hist(cells$ef__peak_t_ramp, probability = T, xlab = 'ef__peak_t_ramp, probability',
main = 'ef__peak_t_ramp, probability') # 4.3.1
first_plot <- TRUE
for (meanlog in  seq(1, to = 3, 0.5)){
curve(dlnorm(x, sdlog = 0.6, meanlog = meanlog), add = first_plot,
from = 0.5, to = 30,
col= 10*meanlog)
}
hist(cells$ef__peak_t_ramp, probability = T, col = 'mediumspringgreen'
xlab = 'ef__peak_t_ramp',
main = 'ef__peak_t_ramp') # 4.3.1
first_plot <- TRUE
for (meanlog in  seq(1, to = 3, 0.5)){
curve(dlnorm(x, sdlog = 0.6, meanlog = meanlog), add = first_plot,
from = 0.5, to = 30,
col= 10*meanlog)
}
par(mfrow = c(1,2))
homo_sapiens = cells$donor__species == 'Homo Sapiens'
Mus_musculus = cells$donor__species == 'Mus musculus'
hist(cells$ef__peak_t_ramp[homo_sapiens], probability = T, xlab = 'ef__peak_t_ramp',
main = 'Homo sapiens ef__peak_t_ramp')
hist(cells$ef__peak_t_ramp[Mus_musculus], probability = T, xlab = 'ef__peak_t_ramp',
main = 'Mus_musculus ef__peak_t_ramp')
hist(cells$ef__peak_t_ramp, probability = T, col = 'mediumspringgreen'
xlab = 'ef__peak_t_ramp',
main = 'ef__peak_t_ramp') # 4.3.1
first_plot <- TRUE
for (meanlog in  seq(1, to = 3, 0.5)){
curve(dlnorm(x, sdlog = 0.6, meanlog = meanlog), add = first_plot,
from = 0.5, to = 30,
col= 10*meanlog)
}
par(mfrow = c(1,1))
hist(cells$ef__peak_t_ramp, probability = T, col = 'mediumspringgreen',
xlab = 'ef__peak_t_ramp',
main = 'ef__peak_t_ramp') # 4.3.1
first_plot <- TRUE
for (meanlog in  seq(1, to = 3, 0.5)){
curve(dlnorm(x, sdlog = 0.6, meanlog = meanlog), add = first_plot,
from = 0.5, to = 30,
col= 10*meanlog)
}
par(mfrow = c(1,1))
hist(cells$ef__peak_t_ramp, probability = T, col = 'mediumspringgreen',
xlab = 'ef__peak_t_ramp',
main = 'ef__peak_t_ramp') # 4.3.1
first_plot <- TRUE
for (meanlog in  seq(1, to = 3, 0.5)){
curve(dlnorm(x, sdlog = 0.6, meanlog = meanlog), add = first_plot,
from = 0.5, to = 30,
col= 10*meanlog,
lwd = 2)
}
hist(cells$ef__peak_t_ramp, probability = T, col = 'mediumspringgreen',
xlab = 'ef__peak_t_ramp',
main = 'ef__peak_t_ramp') # 4.3.1
curve(dlnorm(x, sdlog = 0.6, meanlog = 2.5), add = T,
from = 0.5, to = 30,
col= 10*meanlog,
lwd = 2)
curve(dlnorm(x, sdlog = 0.6, meanlog = 0.5), add = T,
from = 0.5, to = 30,
col= 10*meanlog,
lwd = 2)
curve(dlnorm(x, sdlog = 0.6, meanlog = 1), add = T,
from = 0.5, to = 30,
col= 10*meanlog,
lwd = 2)
curve(dlnorm(x, sdlog = 0.6, meanlog = 1.5), add = T,
from = 0.5, to = 30,
col= 10*meanlog,
lwd = 2)
hist(cells$ef__peak_t_ramp, probability = T, col = 'mediumspringgreen',
xlab = 'ef__peak_t_ramp',
main = 'ef__peak_t_ramp') # 4.3.1
curve(dlnorm(x, sdlog = 0.6, meanlog = 1.5), add = T,
from = 0.5, to = 30,
col= 10*meanlog,
lwd = 2)
hist(cells$ef__peak_t_ramp, probability = T, col = 'royalblue2',
xlab = 'ef__peak_t_ramp',
main = 'ef__peak_t_ramp') # 4.3.1
curve(dlnorm(x, sdlog = 0.6, meanlog = 1.5), add = T,
from = 0.5, to = 30,
col= 'seagreen',
lwd = 2)
curve(dlnorm(x, sdlog = 0.6, meanlog = 1.5), add = T,
from = 0.5, to = 30,
col= 'orange',
lwd = 2)
hist(cells$ef__peak_t_ramp, probability = T, col = 'royalblue2',
xlab = 'ef__peak_t_ramp',
main = 'ef__peak_t_ramp') # 4.3.1
curve(dlnorm(x, sdlog = 0.6, meanlog = 1.5), add = T,
from = 0.5, to = 30,
col= 'orange',
lwd = 1)
# 3: A case study of neuronal data
isidata = read.table("neuronspikes.txt", col.names = "isi")
x = isidata$isi
# 3.1
par(mfrow = c(2,2))
hist(x,
breaks = 50,
probability = T,
main = "Histogram of isi, breaks = 50", xlab = "isi",
col = "seagreen1")
hist(x,
breaks = 40,
probability = T,
main = "Histogram of isi, breaks = 40", xlab = "isi",
col = "cyan1")
hist(x,
breaks = 30,
probability = T,
main = "Histogram of isi, breaks = 30", xlab = "isi",
col = "plum1")
hist(x,
breaks = 20,
probability = T,
main = "Histogram of isi, breaks = 20", xlab = "isi",
col = "orangered")
# 3.2
par(mfrow = c(1,1))
hist(isidata$isi,
breaks = 50,
probability = T,
main = "Histogram of isi", xlab = "isi")
first_plot <- TRUE
for (rate in  seq(0.1, to = 1.5, 0.1)){
curve(dexp(x, rate = rate), add = first_plot,
from = 0, to = 6,
col= 10*rate)
}
# it appears like rate = 1.5 approximates the histogram the best.
# 3.3
pexp(1.5, rate = 1.5) # 3.3.1
pexp(1.5, rate = 1.5) - pexp(0.5, rate = 1.5) # 3.3.2
##############################
# 4: Brain cell database
cells = read.csv("cell_types.csv", na.strings = "")
# 4.1
# na.strings = "" replaces all empty (stripped for whitespaces) strings with NA values.
# 4.2
table(cells$donor__species) # 4.2.1
table(cells$donor__species)[2] / sum(table(cells$donor__species)) # 4.2.2
# 4.3
hist(cells$ef__peak_t_ramp, probability = T, xlab = 'ef__peak_t_ramp',
main = 'ef__peak_t_ramp') # 4.3.1
# 4.3.2
par(mfrow = c(1,2))
homo_sapiens = cells$donor__species == 'Homo Sapiens'
Mus_musculus = cells$donor__species == 'Mus musculus'
hist(cells$ef__peak_t_ramp[homo_sapiens], probability = T, xlab = 'ef__peak_t_ramp',
main = 'Homo sapiens ef__peak_t_ramp')
hist(cells$ef__peak_t_ramp[Mus_musculus], probability = T, xlab = 'ef__peak_t_ramp',
main = 'Mus_musculus ef__peak_t_ramp')
# 4.4
par(mfrow = c(1,1))
hist(cells$ef__peak_t_ramp, probability = T, col = 'mediumspringgreen',
xlab = 'ef__peak_t_ramp',
main = 'ef__peak_t_ramp') # 4.3.1
first_plot <- TRUE
for (meanlog in  seq(1, to = 3, 0.5)){
curve(dlnorm(x, sdlog = 0.6, meanlog = meanlog), add = first_plot,
from = 0.5, to = 30,
col= 10*meanlog,
lwd = 2)
}
# 4.5
# It appears like meanlog = 1.5 approximates the histogram the best.
# 4.6
hist(cells$ef__peak_t_ramp, probability = T, col = 'royalblue2',
xlab = 'ef__peak_t_ramp',
main = 'ef__peak_t_ramp') # 4.3.1
curve(dlnorm(x, sdlog = 0.6, meanlog = 1.5), add = T,
from = 0.5, to = 30,
col= 'orange',
lwd = 2)
par(mfrow = c(1,1))
hist(cells$ef__peak_t_ramp, probability = T, xlab = 'ef__peak_t_ramp',
main = 'ef__peak_t_ramp') # 4.3.1
first_plot <- TRUE
for (meanlog in  seq(1, to = 3, 0.5)){
curve(dlnorm(x, sdlog = 0.6, meanlog = meanlog), add = first_plot,
from = 0.5, to = 30,
col= 10*meanlog)
}
# 3: A case study of neuronal data
isidata = read.table("neuronspikes.txt", col.names = "isi")
x = isidata$isi
# 3.1
par(mfrow = c(2,2))
hist(x,
breaks = 50,
probability = T,
main = "Histogram of isi, breaks = 50", xlab = "isi",
col = "seagreen1")
hist(x,
breaks = 40,
probability = T,
main = "Histogram of isi, breaks = 40", xlab = "isi",
col = "cyan1")
hist(x,
breaks = 30,
probability = T,
main = "Histogram of isi, breaks = 30", xlab = "isi",
col = "plum1")
hist(x,
breaks = 20,
probability = T,
main = "Histogram of isi, breaks = 20", xlab = "isi",
col = "orangered")
# 3.2
par(mfrow = c(1,1))
hist(isidata$isi,
breaks = 50,
probability = T,
main = "Histogram of isi", xlab = "isi")
first_plot <- TRUE
for (rate in  seq(0.1, to = 1.5, 0.1)){
curve(dexp(x, rate = rate), add = first_plot,
from = 0, to = 6,
col= 10*rate)
}
# it appears like rate = 1.5 approximates the histogram the best.
# 3.3
pexp(1.5, rate = 1.5) # 3.3.1
pexp(1.5, rate = 1.5) - pexp(0.5, rate = 1.5) # 3.3.2
##############################
# 4: Brain cell database
cells = read.csv("cell_types.csv", na.strings = "")
# 4.1
# na.strings = "" replaces all empty (stripped for whitespaces) strings with NA values.
# 4.2
table(cells$donor__species) # 4.2.1
table(cells$donor__species)[2] / sum(table(cells$donor__species)) # 4.2.2
# 4.3
hist(cells$ef__peak_t_ramp, probability = T, xlab = 'ef__peak_t_ramp',
main = 'ef__peak_t_ramp') # 4.3.1
# 4.3.2
par(mfrow = c(1,2))
homo_sapiens = cells$donor__species == 'Homo Sapiens'
Mus_musculus = cells$donor__species == 'Mus musculus'
hist(cells$ef__peak_t_ramp[homo_sapiens], probability = T, xlab = 'ef__peak_t_ramp',
main = 'Homo sapiens ef__peak_t_ramp')
hist(cells$ef__peak_t_ramp[Mus_musculus], probability = T, xlab = 'ef__peak_t_ramp',
main = 'Mus_musculus ef__peak_t_ramp')
# 4.4
par(mfrow = c(1,1))
hist(cells$ef__peak_t_ramp, probability = T, xlab = 'ef__peak_t_ramp',
main = 'ef__peak_t_ramp') # 4.3.1
first_plot <- TRUE
for (meanlog in  seq(1, to = 3, 0.5)){
curve(dlnorm(x, sdlog = 0.6, meanlog = meanlog), add = first_plot,
from = 0.5, to = 30,
col= 10*meanlog)
}
# 4.5
# It appears like meanlog = 1.5 approximates the histogram the best.
# 4.6
hist(cells$ef__peak_t_ramp, probability = T, xlab = 'ef__peak_t_ramp',
main = 'ef__peak_t_ramp') # 4.3.1
curve(dlnorm(x, sdlog = 0.6, meanlog = 1.5), add = T,
from = 0.5, to = 30,
col= 'royalblue2',
lwd = 2)
levels(cells$donor__sex)
homo_sapiens = subset(cells, donor__species == 'Homo Sapiens')
table(homo_sapiens$donor__sex)
sum(table(homo_sapiens$donor__sex))
